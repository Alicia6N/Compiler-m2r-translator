;Imprime temp = 0
;Imprime temp = 0
;Imprime temp = 0
;Imprime temp = 0
;Imprime temp = 0
;Imprime temp = 0
;Imprime temp = 0
;Imprime temp = 0
mov #0 B
jmp L5

; metodo: 't1'
L1 
;print
mov @B+0 @B+5		; guarda id a
wri @B+5	; print valor entero de temporal
wrl

;print
mov @B+1 @B+6		; guarda id b
wri @B+6	; print valor entero de temporal
wrl

;print
mov @B+2 @B+7		; guarda id c
wri @B+7	; print valor entero de temporal
wrl

;print
mov @B+3 @B+8		; guarda id d
wri @B+8	; print valor entero de temporal
wrl
; DIR USED = 9
mov #0 @B-3
mov @B-2 A
jmp @A

; metodo: 'factorial'
L4 mov @B+0 @B+2		; guarda id n
mov #1 @B+3		; guarda entero 1
mov @B+2 A
leqi @B+3	; Expr relop Esimple
mov A @B+4	; guardar el resultado en temporal
mov @B+4 A
jz L2 	 ; if 
 mov #1 @B+5		; guarda entero 1
; Secuencia de retorno
mov @B+5 @B-3
mov @B-2 A
jmp @A
L2 mov @B+0 @B+6		; guarda id n
mov @B+0 @B+7		; guarda id n
mov #1 @B+8		; guarda entero 1
mov @B+7 A
subi @B+8	; ENTERO - ENTERO
mov A @B+9	; guardar el resultado en temporal
mov @B+9 @B+13	; asigna un param
; Secuencia de llamada
mov B @B+11
mov B A
addi #10
mov A B
mvetq L3 @B-2
jmp 
L3 mov @B-1 B
mov @B+6 A
muli @B+9	; ENTERO * ENTERO
mov A @B+10
; Secuencia de retorno
mov @B+10 @B-3
mov @B-2 A
jmp @A
; DIR USED = 11
mov #0 @B-3
mov @B-2 A
jmp @A

L5  mov #321 @B+3		; guarda entero 321
mov #5 @B+4		; guarda entero 5
mov @B+3 A
addi @B+4	; ENTERO + ENTERO
mov A @B+5	; guardar el resultado en temporal
mov #2 @B+6		; guarda entero 2
mov @B+5 A
addi @B+6	; ENTERO + ENTERO
mov A @B+7	; guardar el resultado en temporal
mov @B+7 @B+11	; asigna un param
mov #1 @B+8		; guarda entero 1
mov @B+8 @B+12	; asigna un param
mov #2 @B+9		; guarda entero 2
mov @B+9 @B+14	; asigna un param
mov #3 @B+10		; guarda entero 3
mov @B+10 @B+16	; asigna un param
; Secuencia de llamada
mov B @B+12
mov B A
addi #9
mov A B
mvetq L6 @B-2
jmp L1
L6 mov @B-1 B
mov @B+10 @B+0		; foo = @B+10; 

;print
mov #123 @B+11		; guarda entero 123
wri @B+11	; print valor entero de temporal
wrl
mov #5 @B+12		; guarda entero 5
mov @B+12 @B+1		; factorialn = @B+12; 

;print
mov @B+1 @B+13		; guarda id factorialn
wri @B+13	; print valor entero de temporal
wrl

;print
mov @B+1 @B+14		; guarda id factorialn
mov @B+14 @B+18	; asigna un param
; Secuencia de llamada
mov B @B+16
mov B A
addi #17
mov A B
mvetq L7 @B-2
jmp L4
L7 mov @B-1 B
wri @B+14	; print valor entero de temporal
wrl

;print
mov @B+1 @B+15		; guarda id factorialn
wri @B+15	; print valor entero de temporal
wrl
halt
