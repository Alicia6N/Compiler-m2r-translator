;Imprime temp = 
;Imprime temp = 
;Temporal fact = @B+5
;Temporal der = @B+7
;Imprime temp = 
;Imprime temp = 
mov #0 B
jmp L10

; metodo: 'fact'
L3 mov @B+0 @B+2		; guarda id fact
mov #1 @B+3		; guarda entero 1
mov @B+2 A
leqi @B+3	; Expr relop Esimple
mov A @B+4	; guardar el resultado en temporal
mov @B+4 A
jz L1 	 ; if 
 mov $1.9 @B+5		; guarda real 1.9
; Secuencia de retorno
mov @B+5 @B-3
mov @B-2 A
jmp @A
L1 mov @B+0 @B+6		; guarda id fact
mov #1 @B+7		; guarda entero 1
mov @B+6 A
subi @B+7	; ENTERO - ENTERO
mov A @B+8	; guardar el resultado en temporal
mov @B+8 @B+12	; asigna un param
; Secuencia de llamada
mov B @B+10
mov B A
addi #9
mov A B
mvetq L2 @B-2
jmp 
L2 mov @B-1 B
mov @B+0 @B+9		; guarda id fact
mov @B+8 A
muli @B+9	; ENTERO * ENTERO
mov A @B+10
; Secuencia de retorno
mov @B+10 @B-3
mov @B-2 A
jmp @A
; DIR USED = 11
mov @B-2 A
jmp @A

L10  mov $4.4 @B+1		; guarda real 4.4
mov @B+1 A
rtoi 
mov A @B+5	; asigna un param
; Secuencia de llamada
mov B @B+3
mov B A
addi #4
mov A B
mvetq L4 @B-2
jmp L3
L4 mov @B-1 B
wri @B+1	; print valor entero de temporal
wrl
mov $5.9 @B+2		; guarda real 5.9
mov @B+2 A
rtoi 
mov A @B+6	; asigna un param
; Secuencia de llamada
mov B @B+4
mov B A
addi #5
mov A B
mvetq L5 @B-2
jmp L3
L5 mov @B-1 B
mov #5 @B+3		; guarda entero 5
mov @B+3 @B+7	; asigna un param
; Secuencia de llamada
mov B @B+5
mov B A
addi #6
mov A B
mvetq L6 @B-2
jmp L3
L6 mov @B-1 B
mov @B+2 A
eqli @B+3	; Expr relop Esimple
mov A @B+4	; guardar el resultado en temporal
mov @B+4 A
jz L8 	 ; if 
 mov #5 @B+5		; guarda entero 5
mov @B+5 @B+9	; asigna un param
; Secuencia de llamada
mov B @B+7
mov B A
addi #8
mov A B
mvetq L7 @B-2
jmp L3
L7 mov @B-1 B
wri @B+5	; print valor entero de temporal
wrl
L8  mov #7 @B+7		; guarda entero 7
mov @B+7 @B+5		; Instr : Ref asig Expr pyc 
mov @B+5 @B+8		; guarda id fact
mov @B+8 @B+12	; asigna un param
; Secuencia de llamada
mov B @B+10
mov B A
addi #11
mov A B
mvetq L9 @B-2
jmp L3
L9 mov @B-1 B
wri @B+8	; print valor entero de temporal
wrl
mov @B+5 @B+9		; guarda id fact
wri @B+9	; print valor entero de temporal
wrl
halt
