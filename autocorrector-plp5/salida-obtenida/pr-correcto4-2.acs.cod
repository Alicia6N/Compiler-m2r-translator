;Temporal b = @B+0
;Temporal der = @B+10
;Temporal b = @B+0
;Temporal der = @B+11
entra con: a
;Temporal a = @B+24
;Temporal der = @B+25
entra con: a
;Imprime temp = 
;Temporal this.a = @B+52
;Temporal der = @B+55
entra con: a
;Imprime temp = 
entra con: a
;Imprime temp = 
entra con: a
;Temporal a = @B+96
;Temporal der = @B+99
entra con: a
;Imprime temp = 
entra con: a
;Imprime temp = 
entra con: a
;Imprime temp = 
;Temporal this.a = @B+154
;Temporal der = @B+157
entra con: a
;Imprime temp = 
entra con: a
;Imprime temp = 
entra con: a
;Imprime temp = 
entra con: a
;Imprime temp = 
;Imprime temp = 
entra con: a
entra con: a
;Imprime temp = 
mov #4 B
jmp L1

L1  mov #1 @B+2		; guarda entero 1
mov #3 @B+3		; guarda entero 3
mov @B+2 A
subi @B+3	; ENTERO - ENTERO
mov A @B+4	; guardar el resultado en temporal
mov #2 @B+5		; guarda entero 2
mov #5 @B+6		; guarda entero 5
mov @B+5 A
muli @B+6	; ENTERO * ENTERO
mov A @B+7
mov #4 @B+8		; guarda entero 4
mov @B+7 A
divi @B+8	; ENTERO / ENTERO
mov A @B+9
mov @B+4 A
addi @B+9	; ENTERO + ENTERO
mov A @B+10	; guardar el resultado en temporal
mov @B+10 @B+0		; Instr : Ref asig Expr pyc 
mov #123 @B+11		; guarda entero 123
mov @B+11 @B+0		; Instr : Ref asig Expr pyc 
mov #0 12	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+13		; guarda entero 0
mov 12 A 	; hace recursivo de arrays
muli #1
addi @B+13 
mov A 14 
mov #1 @B+15		; guarda entero 1
mov @B+14 A 	; hace recursivo de arrays
muli #2
addi @B+15 
mov A 16 
mov #0 @B+17		; guarda entero 0
mov @B+16 A 	; hace recursivo de arrays
muli #1
addi @B+17 
mov A 18 
mov #0 @B+19		; guarda entero 0
mov @B+18 A 	; hace recursivo de arrays
muli #1
addi @B+19 
mov A 20 
mov #1 @B+21		; guarda entero 1
mov @B+20 A 	; hace recursivo de arrays
muli #2
addi @B+21 
mov A 22 
mov #0 @B+23		; guarda entero 0
mov @B+22 A 	; hace recursivo de arrays
muli #1
addi @B+23 
mov A 24 
mov @B+0 @B+25		; guarda id b
mov @B+24 A
muli #1 
addi #0
mov @B+25 @A
mov #0 26	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+27		; guarda entero 0
mov 26 A 	; hace recursivo de arrays
muli #1
addi @B+27 
mov A 28 
mov #1 @B+29		; guarda entero 1
mov @B+28 A 	; hace recursivo de arrays
muli #2
addi @B+29 
mov A 30 
mov #0 @B+31		; guarda entero 0
mov @B+30 A 	; hace recursivo de arrays
muli #1
addi @B+31 
mov A 32 
mov #0 @B+33		; guarda entero 0
mov @B+32 A 	; hace recursivo de arrays
muli #1
addi @B+33 
mov A 34 
mov #1 @B+35		; guarda entero 1
mov @B+34 A 	; hace recursivo de arrays
muli #2
addi @B+35 
mov A 36 
mov #0 @B+37		; guarda entero 0
mov @B+36 A 	; hace recursivo de arrays
muli #1
addi @B+37 
mov A 38 
mov #0 @B+38		; guarda 0 y empieza recursivo arrays de a
mov @B+38 @B+39		; guarda id a
muli #1 
addi #0
mov @A @B+39
wri @B+39	; print valor entero de temporal
wrl
mov #0 40	; guarda 0 y empieza recursivo arrays de this.a
mov #0 @B+41		; guarda entero 0
mov 40 A 	; hace recursivo de arrays
muli #1
addi @B+41 
mov A 42 
mov #0 @B+43		; guarda entero 0
mov @B+42 A 	; hace recursivo de arrays
muli #2
addi @B+43 
mov A 44 
mov #0 @B+45		; guarda entero 0
mov @B+44 A 	; hace recursivo de arrays
muli #1
addi @B+45 
mov A 46 
mov #0 @B+47		; guarda entero 0
mov @B+46 A 	; hace recursivo de arrays
muli #1
addi @B+47 
mov A 48 
mov #0 @B+49		; guarda entero 0
mov @B+48 A 	; hace recursivo de arrays
muli #2
addi @B+49 
mov A 50 
mov #0 @B+51		; guarda entero 0
mov @B+50 A 	; hace recursivo de arrays
muli #1
addi @B+51 
mov A 52 
mov @B+0 @B+53		; guarda id b
mov #1 @B+54		; guarda entero 1
mov @B+53 A
addi @B+54	; ENTERO + ENTERO
mov A @B+55	; guardar el resultado en temporal
mov @B+52 A
muli #1 
addi #0
mov @B+55 @A
mov #0 56	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+57		; guarda entero 0
mov 56 A 	; hace recursivo de arrays
muli #1
addi @B+57 
mov A 58 
mov #1 @B+59		; guarda entero 1
mov @B+58 A 	; hace recursivo de arrays
muli #2
addi @B+59 
mov A 60 
mov #0 @B+61		; guarda entero 0
mov @B+60 A 	; hace recursivo de arrays
muli #1
addi @B+61 
mov A 62 
mov #0 @B+63		; guarda entero 0
mov @B+62 A 	; hace recursivo de arrays
muli #1
addi @B+63 
mov A 64 
mov #1 @B+65		; guarda entero 1
mov @B+64 A 	; hace recursivo de arrays
muli #2
addi @B+65 
mov A 66 
mov #0 @B+67		; guarda entero 0
mov @B+66 A 	; hace recursivo de arrays
muli #1
addi @B+67 
mov A 68 
mov #0 @B+68		; guarda 0 y empieza recursivo arrays de a
mov @B+68 @B+69		; guarda id a
muli #1 
addi #0
mov @A @B+69
wri @B+69	; print valor entero de temporal
wrl
mov #0 70	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+71		; guarda entero 0
mov 70 A 	; hace recursivo de arrays
muli #1
addi @B+71 
mov A 72 
mov #0 @B+73		; guarda entero 0
mov @B+72 A 	; hace recursivo de arrays
muli #2
addi @B+73 
mov A 74 
mov #0 @B+75		; guarda entero 0
mov @B+74 A 	; hace recursivo de arrays
muli #1
addi @B+75 
mov A 76 
mov #0 @B+77		; guarda entero 0
mov @B+76 A 	; hace recursivo de arrays
muli #1
addi @B+77 
mov A 78 
mov #0 @B+79		; guarda entero 0
mov @B+78 A 	; hace recursivo de arrays
muli #2
addi @B+79 
mov A 80 
mov #0 @B+81		; guarda entero 0
mov @B+80 A 	; hace recursivo de arrays
muli #1
addi @B+81 
mov A 82 
mov #0 @B+82		; guarda 0 y empieza recursivo arrays de a
mov @B+82 @B+83		; guarda id a
muli #1 
addi #0
mov @A @B+83
wri @B+83	; print valor entero de temporal
wrl
mov #0 84	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+85		; guarda entero 0
mov 84 A 	; hace recursivo de arrays
muli #1
addi @B+85 
mov A 86 
mov #1 @B+87		; guarda entero 1
mov @B+86 A 	; hace recursivo de arrays
muli #2
addi @B+87 
mov A 88 
mov #0 @B+89		; guarda entero 0
mov @B+88 A 	; hace recursivo de arrays
muli #1
addi @B+89 
mov A 90 
mov #0 @B+91		; guarda entero 0
mov @B+90 A 	; hace recursivo de arrays
muli #1
addi @B+91 
mov A 92 
mov #0 @B+93		; guarda entero 0
mov @B+92 A 	; hace recursivo de arrays
muli #2
addi @B+93 
mov A 94 
mov #0 @B+95		; guarda entero 0
mov @B+94 A 	; hace recursivo de arrays
muli #1
addi @B+95 
mov A 96 
mov @B+0 @B+97		; guarda id b
mov #2 @B+98		; guarda entero 2
mov @B+97 A
addi @B+98	; ENTERO + ENTERO
mov A @B+99	; guardar el resultado en temporal
mov @B+96 A
muli #1 
addi #0
mov @B+99 @A
mov #0 100	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+101		; guarda entero 0
mov 100 A 	; hace recursivo de arrays
muli #1
addi @B+101 
mov A 102 
mov #1 @B+103		; guarda entero 1
mov @B+102 A 	; hace recursivo de arrays
muli #2
addi @B+103 
mov A 104 
mov #0 @B+105		; guarda entero 0
mov @B+104 A 	; hace recursivo de arrays
muli #1
addi @B+105 
mov A 106 
mov #0 @B+107		; guarda entero 0
mov @B+106 A 	; hace recursivo de arrays
muli #1
addi @B+107 
mov A 108 
mov #1 @B+109		; guarda entero 1
mov @B+108 A 	; hace recursivo de arrays
muli #2
addi @B+109 
mov A 110 
mov #0 @B+111		; guarda entero 0
mov @B+110 A 	; hace recursivo de arrays
muli #1
addi @B+111 
mov A 112 
mov #0 @B+112		; guarda 0 y empieza recursivo arrays de a
mov @B+112 @B+113		; guarda id a
muli #1 
addi #0
mov @A @B+113
wri @B+113	; print valor entero de temporal
wrl
mov #0 114	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+115		; guarda entero 0
mov 114 A 	; hace recursivo de arrays
muli #1
addi @B+115 
mov A 116 
mov #0 @B+117		; guarda entero 0
mov @B+116 A 	; hace recursivo de arrays
muli #2
addi @B+117 
mov A 118 
mov #0 @B+119		; guarda entero 0
mov @B+118 A 	; hace recursivo de arrays
muli #1
addi @B+119 
mov A 120 
mov #0 @B+121		; guarda entero 0
mov @B+120 A 	; hace recursivo de arrays
muli #1
addi @B+121 
mov A 122 
mov #0 @B+123		; guarda entero 0
mov @B+122 A 	; hace recursivo de arrays
muli #2
addi @B+123 
mov A 124 
mov #0 @B+125		; guarda entero 0
mov @B+124 A 	; hace recursivo de arrays
muli #1
addi @B+125 
mov A 126 
mov #0 @B+126		; guarda 0 y empieza recursivo arrays de a
mov @B+126 @B+127		; guarda id a
muli #1 
addi #0
mov @A @B+127
wri @B+127	; print valor entero de temporal
wrl
mov #0 128	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+129		; guarda entero 0
mov 128 A 	; hace recursivo de arrays
muli #1
addi @B+129 
mov A 130 
mov #1 @B+131		; guarda entero 1
mov @B+130 A 	; hace recursivo de arrays
muli #2
addi @B+131 
mov A 132 
mov #0 @B+133		; guarda entero 0
mov @B+132 A 	; hace recursivo de arrays
muli #1
addi @B+133 
mov A 134 
mov #0 @B+135		; guarda entero 0
mov @B+134 A 	; hace recursivo de arrays
muli #1
addi @B+135 
mov A 136 
mov #0 @B+137		; guarda entero 0
mov @B+136 A 	; hace recursivo de arrays
muli #2
addi @B+137 
mov A 138 
mov #0 @B+139		; guarda entero 0
mov @B+138 A 	; hace recursivo de arrays
muli #1
addi @B+139 
mov A 140 
mov #0 @B+140		; guarda 0 y empieza recursivo arrays de a
mov @B+140 @B+141		; guarda id a
muli #1 
addi #0
mov @A @B+141
wri @B+141	; print valor entero de temporal
wrl
mov #0 142	; guarda 0 y empieza recursivo arrays de this.a
mov #0 @B+143		; guarda entero 0
mov 142 A 	; hace recursivo de arrays
muli #1
addi @B+143 
mov A 144 
mov #0 @B+145		; guarda entero 0
mov @B+144 A 	; hace recursivo de arrays
muli #2
addi @B+145 
mov A 146 
mov #0 @B+147		; guarda entero 0
mov @B+146 A 	; hace recursivo de arrays
muli #1
addi @B+147 
mov A 148 
mov #0 @B+149		; guarda entero 0
mov @B+148 A 	; hace recursivo de arrays
muli #1
addi @B+149 
mov A 150 
mov #1 @B+151		; guarda entero 1
mov @B+150 A 	; hace recursivo de arrays
muli #2
addi @B+151 
mov A 152 
mov #0 @B+153		; guarda entero 0
mov @B+152 A 	; hace recursivo de arrays
muli #1
addi @B+153 
mov A 154 
mov @B+0 @B+155		; guarda id b
mov #3 @B+156		; guarda entero 3
mov @B+155 A
addi @B+156	; ENTERO + ENTERO
mov A @B+157	; guardar el resultado en temporal
mov @B+154 A
muli #1 
addi #0
mov @B+157 @A
mov #0 158	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+159		; guarda entero 0
mov 158 A 	; hace recursivo de arrays
muli #1
addi @B+159 
mov A 160 
mov #1 @B+161		; guarda entero 1
mov @B+160 A 	; hace recursivo de arrays
muli #2
addi @B+161 
mov A 162 
mov #0 @B+163		; guarda entero 0
mov @B+162 A 	; hace recursivo de arrays
muli #1
addi @B+163 
mov A 164 
mov #0 @B+165		; guarda entero 0
mov @B+164 A 	; hace recursivo de arrays
muli #1
addi @B+165 
mov A 166 
mov #1 @B+167		; guarda entero 1
mov @B+166 A 	; hace recursivo de arrays
muli #2
addi @B+167 
mov A 168 
mov #0 @B+169		; guarda entero 0
mov @B+168 A 	; hace recursivo de arrays
muli #1
addi @B+169 
mov A 170 
mov #0 @B+170		; guarda 0 y empieza recursivo arrays de a
mov @B+170 @B+171		; guarda id a
muli #1 
addi #0
mov @A @B+171
wri @B+171	; print valor entero de temporal
wrl
mov #0 172	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+173		; guarda entero 0
mov 172 A 	; hace recursivo de arrays
muli #1
addi @B+173 
mov A 174 
mov #0 @B+175		; guarda entero 0
mov @B+174 A 	; hace recursivo de arrays
muli #2
addi @B+175 
mov A 176 
mov #0 @B+177		; guarda entero 0
mov @B+176 A 	; hace recursivo de arrays
muli #1
addi @B+177 
mov A 178 
mov #0 @B+179		; guarda entero 0
mov @B+178 A 	; hace recursivo de arrays
muli #1
addi @B+179 
mov A 180 
mov #0 @B+181		; guarda entero 0
mov @B+180 A 	; hace recursivo de arrays
muli #2
addi @B+181 
mov A 182 
mov #0 @B+183		; guarda entero 0
mov @B+182 A 	; hace recursivo de arrays
muli #1
addi @B+183 
mov A 184 
mov #0 @B+184		; guarda 0 y empieza recursivo arrays de a
mov @B+184 @B+185		; guarda id a
muli #1 
addi #0
mov @A @B+185
wri @B+185	; print valor entero de temporal
wrl
mov #0 186	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+187		; guarda entero 0
mov 186 A 	; hace recursivo de arrays
muli #1
addi @B+187 
mov A 188 
mov #1 @B+189		; guarda entero 1
mov @B+188 A 	; hace recursivo de arrays
muli #2
addi @B+189 
mov A 190 
mov #0 @B+191		; guarda entero 0
mov @B+190 A 	; hace recursivo de arrays
muli #1
addi @B+191 
mov A 192 
mov #0 @B+193		; guarda entero 0
mov @B+192 A 	; hace recursivo de arrays
muli #1
addi @B+193 
mov A 194 
mov #0 @B+195		; guarda entero 0
mov @B+194 A 	; hace recursivo de arrays
muli #2
addi @B+195 
mov A 196 
mov #0 @B+197		; guarda entero 0
mov @B+196 A 	; hace recursivo de arrays
muli #1
addi @B+197 
mov A 198 
mov #0 @B+198		; guarda 0 y empieza recursivo arrays de a
mov @B+198 @B+199		; guarda id a
muli #1 
addi #0
mov @A @B+199
wri @B+199	; print valor entero de temporal
wrl
mov #0 200	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+201		; guarda entero 0
mov 200 A 	; hace recursivo de arrays
muli #1
addi @B+201 
mov A 202 
mov #0 @B+203		; guarda entero 0
mov @B+202 A 	; hace recursivo de arrays
muli #2
addi @B+203 
mov A 204 
mov #0 @B+205		; guarda entero 0
mov @B+204 A 	; hace recursivo de arrays
muli #1
addi @B+205 
mov A 206 
mov #0 @B+207		; guarda entero 0
mov @B+206 A 	; hace recursivo de arrays
muli #1
addi @B+207 
mov A 208 
mov #1 @B+209		; guarda entero 1
mov @B+208 A 	; hace recursivo de arrays
muli #2
addi @B+209 
mov A 210 
mov #0 @B+211		; guarda entero 0
mov @B+210 A 	; hace recursivo de arrays
muli #1
addi @B+211 
mov A 212 
mov #0 @B+212		; guarda 0 y empieza recursivo arrays de a
mov @B+212 @B+213		; guarda id a
muli #1 
addi #0
mov @A @B+213
wri @B+213	; print valor entero de temporal
wrl
mov @B+0 @B+214		; guarda id b
mov #100 @B+215		; guarda entero 100
mov @B+214 A
subi @B+215	; ENTERO - ENTERO
mov A @B+216	; guardar el resultado en temporal
wri @B+216	; print valor entero de temporal
wrl
mov #0 217	; guarda 0 y empieza recursivo arrays de this.a
mov #0 @B+218		; guarda entero 0
mov 217 A 	; hace recursivo de arrays
muli #1
addi @B+218 
mov A 219 
mov #1 @B+220		; guarda entero 1
mov @B+219 A 	; hace recursivo de arrays
muli #2
addi @B+220 
mov A 221 
mov #0 @B+222		; guarda entero 0
mov @B+221 A 	; hace recursivo de arrays
muli #1
addi @B+222 
mov A 223 
mov #0 @B+224		; guarda entero 0
mov @B+223 A 	; hace recursivo de arrays
muli #1
addi @B+224 
mov A 225 
mov #1 @B+226		; guarda entero 1
mov @B+225 A 	; hace recursivo de arrays
muli #2
addi @B+226 
mov A 227 
mov #0 @B+228		; guarda entero 0
mov @B+227 A 	; hace recursivo de arrays
muli #1
addi @B+228 
mov A 229 
mov #0 @B+229		; guarda 0 y empieza recursivo arrays de this.a
mov @B+229 @B+230		; guarda id this.a
muli #1 
addi #0
mov @A @B+230
mov #0 231	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+232		; guarda entero 0
mov 231 A 	; hace recursivo de arrays
muli #1
addi @B+232 
mov A 233 
mov #0 @B+234		; guarda entero 0
mov @B+233 A 	; hace recursivo de arrays
muli #2
addi @B+234 
mov A 235 
mov #0 @B+236		; guarda entero 0
mov @B+235 A 	; hace recursivo de arrays
muli #1
addi @B+236 
mov A 237 
mov #0 @B+238		; guarda entero 0
mov @B+237 A 	; hace recursivo de arrays
muli #1
addi @B+238 
mov A 239 
mov #0 @B+240		; guarda entero 0
mov @B+239 A 	; hace recursivo de arrays
muli #2
addi @B+240 
mov A 241 
mov #0 @B+242		; guarda entero 0
mov @B+241 A 	; hace recursivo de arrays
muli #1
addi @B+242 
mov A 243 
mov #0 @B+243		; guarda 0 y empieza recursivo arrays de a
mov @B+243 @B+244		; guarda id a
muli #1 
addi #0
mov @A @B+244
mov @B+230 A
addi @B+244	; ENTERO + ENTERO
mov A @B+245	; guardar el resultado en temporal
mov #0 246	; guarda 0 y empieza recursivo arrays de this.a
mov #0 @B+247		; guarda entero 0
mov 246 A 	; hace recursivo de arrays
muli #1
addi @B+247 
mov A 248 
mov #1 @B+249		; guarda entero 1
mov @B+248 A 	; hace recursivo de arrays
muli #2
addi @B+249 
mov A 250 
mov #0 @B+251		; guarda entero 0
mov @B+250 A 	; hace recursivo de arrays
muli #1
addi @B+251 
mov A 252 
mov #0 @B+253		; guarda entero 0
mov @B+252 A 	; hace recursivo de arrays
muli #1
addi @B+253 
mov A 254 
mov #0 @B+255		; guarda entero 0
mov @B+254 A 	; hace recursivo de arrays
muli #2
addi @B+255 
mov A 256 
mov #0 @B+257		; guarda entero 0
mov @B+256 A 	; hace recursivo de arrays
muli #1
addi @B+257 
mov A 258 
mov #0 @B+258		; guarda 0 y empieza recursivo arrays de this.a
mov @B+258 @B+259		; guarda id this.a
muli #1 
addi #0
mov @A @B+259
mov @B+245 A
addi @B+259	; ENTERO + ENTERO
mov A @B+260	; guardar el resultado en temporal
mov #0 261	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+262		; guarda entero 0
mov 261 A 	; hace recursivo de arrays
muli #1
addi @B+262 
mov A 263 
mov #0 @B+264		; guarda entero 0
mov @B+263 A 	; hace recursivo de arrays
muli #2
addi @B+264 
mov A 265 
mov #0 @B+266		; guarda entero 0
mov @B+265 A 	; hace recursivo de arrays
muli #1
addi @B+266 
mov A 267 
mov #0 @B+268		; guarda entero 0
mov @B+267 A 	; hace recursivo de arrays
muli #1
addi @B+268 
mov A 269 
mov #1 @B+270		; guarda entero 1
mov @B+269 A 	; hace recursivo de arrays
muli #2
addi @B+270 
mov A 271 
mov #0 @B+272		; guarda entero 0
mov @B+271 A 	; hace recursivo de arrays
muli #1
addi @B+272 
mov A 273 
mov #0 @B+273		; guarda 0 y empieza recursivo arrays de a
mov @B+273 @B+274		; guarda id a
muli #1 
addi #0
mov @A @B+274
mov @B+260 A
addi @B+274	; ENTERO + ENTERO
mov A @B+275	; guardar el resultado en temporal
wri @B+275	; print valor entero de temporal
wrl
halt
