mov #1 6		; guarda entero 1
mov #3 7		; guarda entero 3
mov 6 A
subi 7	; ENTERO - ENTERO
mov A 8	; guardar el resultado en temporal
mov #2 9		; guarda entero 2
mov #5 10		; guarda entero 5
mov 9 A
muli 10	; ENTERO * ENTERO
mov A 11
mov #4 12		; guarda entero 4
mov 11 A
divi 12	; ENTERO / ENTERO
mov A 13
mov 8 A
addi 13	; ENTERO + ENTERO
mov A 14	; guardar el resultado en temporal
mov 14 4		; Instr : Ref asig Expr pyc 
mov #0 15	; guarda 0 y empieza recursivo arrays de a
mov #0 16		; guarda entero 0
mov 15 A 	; hace recursivo de arrays
muli #1
addi 16 
mov A 17 
mov #1 18		; guarda entero 1
mov 17 A 	; hace recursivo de arrays
muli #2
addi 18 
mov A 19 
mov #0 20		; guarda entero 0
mov 19 A 	; hace recursivo de arrays
muli #1
addi 20 
mov A 21 
mov #0 22		; guarda entero 0
mov 21 A 	; hace recursivo de arrays
muli #1
addi 22 
mov A 23 
mov #1 24		; guarda entero 1
mov 23 A 	; hace recursivo de arrays
muli #2
addi 24 
mov A 25 
mov #0 26		; guarda entero 0
mov 25 A 	; hace recursivo de arrays
muli #1
addi 26 
mov A 27 
mov 4 28		; guarda id b
mov 27 A
muli #1 
addi #0
mov 28 @A
mov #0 29	; guarda 0 y empieza recursivo arrays de a
mov #0 30		; guarda entero 0
mov 29 A 	; hace recursivo de arrays
muli #1
addi 30 
mov A 31 
mov #0 32		; guarda entero 0
mov 31 A 	; hace recursivo de arrays
muli #2
addi 32 
mov A 33 
mov #0 34		; guarda entero 0
mov 33 A 	; hace recursivo de arrays
muli #1
addi 34 
mov A 35 
mov #0 36		; guarda entero 0
mov 35 A 	; hace recursivo de arrays
muli #1
addi 36 
mov A 37 
mov #0 38		; guarda entero 0
mov 37 A 	; hace recursivo de arrays
muli #2
addi 38 
mov A 39 
mov #0 40		; guarda entero 0
mov 39 A 	; hace recursivo de arrays
muli #1
addi 40 
mov A 41 
mov 4 42		; guarda id b
mov #1 43		; guarda entero 1
mov 42 A
addi 43	; ENTERO + ENTERO
mov A 44	; guardar el resultado en temporal
mov 41 A
muli #1 
addi #0
mov 44 @A
mov #0 45	; guarda 0 y empieza recursivo arrays de a
mov #0 46		; guarda entero 0
mov 45 A 	; hace recursivo de arrays
muli #1
addi 46 
mov A 47 
mov #1 48		; guarda entero 1
mov 47 A 	; hace recursivo de arrays
muli #2
addi 48 
mov A 49 
mov #0 50		; guarda entero 0
mov 49 A 	; hace recursivo de arrays
muli #1
addi 50 
mov A 51 
mov #0 52		; guarda entero 0
mov 51 A 	; hace recursivo de arrays
muli #1
addi 52 
mov A 53 
mov #0 54		; guarda entero 0
mov 53 A 	; hace recursivo de arrays
muli #2
addi 54 
mov A 55 
mov #0 56		; guarda entero 0
mov 55 A 	; hace recursivo de arrays
muli #1
addi 56 
mov A 57 
mov 4 58		; guarda id b
mov #2 59		; guarda entero 2
mov 58 A
addi 59	; ENTERO + ENTERO
mov A 60	; guardar el resultado en temporal
mov 57 A
muli #1 
addi #0
mov 60 @A
mov #0 61	; guarda 0 y empieza recursivo arrays de a
mov #0 62		; guarda entero 0
mov 61 A 	; hace recursivo de arrays
muli #1
addi 62 
mov A 63 
mov #0 64		; guarda entero 0
mov 63 A 	; hace recursivo de arrays
muli #2
addi 64 
mov A 65 
mov #0 66		; guarda entero 0
mov 65 A 	; hace recursivo de arrays
muli #1
addi 66 
mov A 67 
mov #0 68		; guarda entero 0
mov 67 A 	; hace recursivo de arrays
muli #1
addi 68 
mov A 69 
mov #1 70		; guarda entero 1
mov 69 A 	; hace recursivo de arrays
muli #2
addi 70 
mov A 71 
mov #0 72		; guarda entero 0
mov 71 A 	; hace recursivo de arrays
muli #1
addi 72 
mov A 73 
mov 4 74		; guarda id b
mov #3 75		; guarda entero 3
mov 74 A
addi 75	; ENTERO + ENTERO
mov A 76	; guardar el resultado en temporal
mov 73 A
muli #1 
addi #0
mov 76 @A
mov 4 77		; guarda id b
wri 77	; print valor entero de temporal
wrl
mov #0 78	; guarda 0 y empieza recursivo arrays de a
mov #0 79		; guarda entero 0
mov 78 A 	; hace recursivo de arrays
muli #1
addi 79 
mov A 80 
mov #1 81		; guarda entero 1
mov 80 A 	; hace recursivo de arrays
muli #2
addi 81 
mov A 82 
mov #0 83		; guarda entero 0
mov 82 A 	; hace recursivo de arrays
muli #1
addi 83 
mov A 84 
mov #0 85		; guarda entero 0
mov 84 A 	; hace recursivo de arrays
muli #1
addi 85 
mov A 86 
mov #1 87		; guarda entero 1
mov 86 A 	; hace recursivo de arrays
muli #2
addi 87 
mov A 88 
mov #0 89		; guarda entero 0
mov 88 A 	; hace recursivo de arrays
muli #1
addi 89 
mov A 90 
mov #0 90		; guarda 0 y empieza recursivo arrays de a
mov 90 91		; guarda id a
muli #1 
addi #0
mov @A 91
mov #0 92	; guarda 0 y empieza recursivo arrays de a
mov #0 93		; guarda entero 0
mov 92 A 	; hace recursivo de arrays
muli #1
addi 93 
mov A 94 
mov #0 95		; guarda entero 0
mov 94 A 	; hace recursivo de arrays
muli #2
addi 95 
mov A 96 
mov #0 97		; guarda entero 0
mov 96 A 	; hace recursivo de arrays
muli #1
addi 97 
mov A 98 
mov #0 99		; guarda entero 0
mov 98 A 	; hace recursivo de arrays
muli #1
addi 99 
mov A 100 
mov #0 101		; guarda entero 0
mov 100 A 	; hace recursivo de arrays
muli #2
addi 101 
mov A 102 
mov #0 103		; guarda entero 0
mov 102 A 	; hace recursivo de arrays
muli #1
addi 103 
mov A 104 
mov #0 104		; guarda 0 y empieza recursivo arrays de a
mov 104 105		; guarda id a
muli #1 
addi #0
mov @A 105
mov 91 A
addi 105	; ENTERO + ENTERO
mov A 106	; guardar el resultado en temporal
mov #0 107	; guarda 0 y empieza recursivo arrays de a
mov #0 108		; guarda entero 0
mov 107 A 	; hace recursivo de arrays
muli #1
addi 108 
mov A 109 
mov #1 110		; guarda entero 1
mov 109 A 	; hace recursivo de arrays
muli #2
addi 110 
mov A 111 
mov #0 112		; guarda entero 0
mov 111 A 	; hace recursivo de arrays
muli #1
addi 112 
mov A 113 
mov #0 114		; guarda entero 0
mov 113 A 	; hace recursivo de arrays
muli #1
addi 114 
mov A 115 
mov #0 116		; guarda entero 0
mov 115 A 	; hace recursivo de arrays
muli #2
addi 116 
mov A 117 
mov #0 118		; guarda entero 0
mov 117 A 	; hace recursivo de arrays
muli #1
addi 118 
mov A 119 
mov #0 119		; guarda 0 y empieza recursivo arrays de a
mov 119 120		; guarda id a
muli #1 
addi #0
mov @A 120
mov 106 A
addi 120	; ENTERO + ENTERO
mov A 121	; guardar el resultado en temporal
mov #0 122	; guarda 0 y empieza recursivo arrays de a
mov #0 123		; guarda entero 0
mov 122 A 	; hace recursivo de arrays
muli #1
addi 123 
mov A 124 
mov #0 125		; guarda entero 0
mov 124 A 	; hace recursivo de arrays
muli #2
addi 125 
mov A 126 
mov #0 127		; guarda entero 0
mov 126 A 	; hace recursivo de arrays
muli #1
addi 127 
mov A 128 
mov #0 129		; guarda entero 0
mov 128 A 	; hace recursivo de arrays
muli #1
addi 129 
mov A 130 
mov #1 131		; guarda entero 1
mov 130 A 	; hace recursivo de arrays
muli #2
addi 131 
mov A 132 
mov #0 133		; guarda entero 0
mov 132 A 	; hace recursivo de arrays
muli #1
addi 133 
mov A 134 
mov #0 134		; guarda 0 y empieza recursivo arrays de a
mov 134 135		; guarda id a
muli #1 
addi #0
mov @A 135
mov 121 A
addi 135	; ENTERO + ENTERO
mov A 136	; guardar el resultado en temporal
wri 136	; print valor entero de temporal
wrl
halt
