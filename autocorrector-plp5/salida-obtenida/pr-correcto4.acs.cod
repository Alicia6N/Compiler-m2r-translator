;Temporal b = @B+0
;Temporal der = @B+10
entra con: a
;Temporal a = @B+23
;Temporal der = @B+24
;Temporal this.a = @B+37
;Temporal der = @B+40
entra con: a
;Temporal a = @B+53
;Temporal der = @B+56
;Temporal this.a = @B+69
;Temporal der = @B+72
;Imprime temp = 
entra con: a
entra con: a
;Imprime temp = 
mov #4 B
jmp L1

L1  mov #1 @B+2		; guarda entero 1
mov #3 @B+3		; guarda entero 3
mov @B+2 A
subi @B+3	; ENTERO - ENTERO
mov A @B+4	; guardar el resultado en temporal
mov #2 @B+5		; guarda entero 2
mov #5 @B+6		; guarda entero 5
mov @B+5 A
muli @B+6	; ENTERO * ENTERO
mov A @B+7
mov #4 @B+8		; guarda entero 4
mov @B+7 A
divi @B+8	; ENTERO / ENTERO
mov A @B+9
mov @B+4 A
addi @B+9	; ENTERO + ENTERO
mov A @B+10	; guardar el resultado en temporal
mov @B+10 @B+0		; Instr : Ref asig Expr pyc 
mov #0 11	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+12		; guarda entero 0
mov 11 A 	; hace recursivo de arrays
muli #1
addi @B+12 
mov A 13 
mov #1 @B+14		; guarda entero 1
mov @B+13 A 	; hace recursivo de arrays
muli #2
addi @B+14 
mov A 15 
mov #0 @B+16		; guarda entero 0
mov @B+15 A 	; hace recursivo de arrays
muli #1
addi @B+16 
mov A 17 
mov #0 @B+18		; guarda entero 0
mov @B+17 A 	; hace recursivo de arrays
muli #1
addi @B+18 
mov A 19 
mov #1 @B+20		; guarda entero 1
mov @B+19 A 	; hace recursivo de arrays
muli #2
addi @B+20 
mov A 21 
mov #0 @B+22		; guarda entero 0
mov @B+21 A 	; hace recursivo de arrays
muli #1
addi @B+22 
mov A 23 
mov @B+0 @B+24		; guarda id b
mov @B+23 A
muli #1 
addi #0
mov @B+24 @A
mov #0 25	; guarda 0 y empieza recursivo arrays de this.a
mov #0 @B+26		; guarda entero 0
mov 25 A 	; hace recursivo de arrays
muli #1
addi @B+26 
mov A 27 
mov #0 @B+28		; guarda entero 0
mov @B+27 A 	; hace recursivo de arrays
muli #2
addi @B+28 
mov A 29 
mov #0 @B+30		; guarda entero 0
mov @B+29 A 	; hace recursivo de arrays
muli #1
addi @B+30 
mov A 31 
mov #0 @B+32		; guarda entero 0
mov @B+31 A 	; hace recursivo de arrays
muli #1
addi @B+32 
mov A 33 
mov #0 @B+34		; guarda entero 0
mov @B+33 A 	; hace recursivo de arrays
muli #2
addi @B+34 
mov A 35 
mov #0 @B+36		; guarda entero 0
mov @B+35 A 	; hace recursivo de arrays
muli #1
addi @B+36 
mov A 37 
mov @B+0 @B+38		; guarda id b
mov #1 @B+39		; guarda entero 1
mov @B+38 A
addi @B+39	; ENTERO + ENTERO
mov A @B+40	; guardar el resultado en temporal
mov @B+37 A
muli #1 
addi #0
mov @B+40 @A
mov #0 41	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+42		; guarda entero 0
mov 41 A 	; hace recursivo de arrays
muli #1
addi @B+42 
mov A 43 
mov #1 @B+44		; guarda entero 1
mov @B+43 A 	; hace recursivo de arrays
muli #2
addi @B+44 
mov A 45 
mov #0 @B+46		; guarda entero 0
mov @B+45 A 	; hace recursivo de arrays
muli #1
addi @B+46 
mov A 47 
mov #0 @B+48		; guarda entero 0
mov @B+47 A 	; hace recursivo de arrays
muli #1
addi @B+48 
mov A 49 
mov #0 @B+50		; guarda entero 0
mov @B+49 A 	; hace recursivo de arrays
muli #2
addi @B+50 
mov A 51 
mov #0 @B+52		; guarda entero 0
mov @B+51 A 	; hace recursivo de arrays
muli #1
addi @B+52 
mov A 53 
mov @B+0 @B+54		; guarda id b
mov #2 @B+55		; guarda entero 2
mov @B+54 A
addi @B+55	; ENTERO + ENTERO
mov A @B+56	; guardar el resultado en temporal
mov @B+53 A
muli #1 
addi #0
mov @B+56 @A
mov #0 57	; guarda 0 y empieza recursivo arrays de this.a
mov #0 @B+58		; guarda entero 0
mov 57 A 	; hace recursivo de arrays
muli #1
addi @B+58 
mov A 59 
mov #0 @B+60		; guarda entero 0
mov @B+59 A 	; hace recursivo de arrays
muli #2
addi @B+60 
mov A 61 
mov #0 @B+62		; guarda entero 0
mov @B+61 A 	; hace recursivo de arrays
muli #1
addi @B+62 
mov A 63 
mov #0 @B+64		; guarda entero 0
mov @B+63 A 	; hace recursivo de arrays
muli #1
addi @B+64 
mov A 65 
mov #1 @B+66		; guarda entero 1
mov @B+65 A 	; hace recursivo de arrays
muli #2
addi @B+66 
mov A 67 
mov #0 @B+68		; guarda entero 0
mov @B+67 A 	; hace recursivo de arrays
muli #1
addi @B+68 
mov A 69 
mov @B+0 @B+70		; guarda id b
mov #3 @B+71		; guarda entero 3
mov @B+70 A
addi @B+71	; ENTERO + ENTERO
mov A @B+72	; guardar el resultado en temporal
mov @B+69 A
muli #1 
addi #0
mov @B+72 @A
mov @B+0 @B+73		; guarda id b
wri @B+73	; print valor entero de temporal
wrl
mov #0 74	; guarda 0 y empieza recursivo arrays de this.a
mov #0 @B+75		; guarda entero 0
mov 74 A 	; hace recursivo de arrays
muli #1
addi @B+75 
mov A 76 
mov #1 @B+77		; guarda entero 1
mov @B+76 A 	; hace recursivo de arrays
muli #2
addi @B+77 
mov A 78 
mov #0 @B+79		; guarda entero 0
mov @B+78 A 	; hace recursivo de arrays
muli #1
addi @B+79 
mov A 80 
mov #0 @B+81		; guarda entero 0
mov @B+80 A 	; hace recursivo de arrays
muli #1
addi @B+81 
mov A 82 
mov #1 @B+83		; guarda entero 1
mov @B+82 A 	; hace recursivo de arrays
muli #2
addi @B+83 
mov A 84 
mov #0 @B+85		; guarda entero 0
mov @B+84 A 	; hace recursivo de arrays
muli #1
addi @B+85 
mov A 86 
mov #0 @B+86		; guarda 0 y empieza recursivo arrays de this.a
mov @B+86 @B+87		; guarda id this.a
muli #1 
addi #0
mov @A @B+87
mov #0 88	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+89		; guarda entero 0
mov 88 A 	; hace recursivo de arrays
muli #1
addi @B+89 
mov A 90 
mov #0 @B+91		; guarda entero 0
mov @B+90 A 	; hace recursivo de arrays
muli #2
addi @B+91 
mov A 92 
mov #0 @B+93		; guarda entero 0
mov @B+92 A 	; hace recursivo de arrays
muli #1
addi @B+93 
mov A 94 
mov #0 @B+95		; guarda entero 0
mov @B+94 A 	; hace recursivo de arrays
muli #1
addi @B+95 
mov A 96 
mov #0 @B+97		; guarda entero 0
mov @B+96 A 	; hace recursivo de arrays
muli #2
addi @B+97 
mov A 98 
mov #0 @B+99		; guarda entero 0
mov @B+98 A 	; hace recursivo de arrays
muli #1
addi @B+99 
mov A 100 
mov #0 @B+100		; guarda 0 y empieza recursivo arrays de a
mov @B+100 @B+101		; guarda id a
muli #1 
addi #0
mov @A @B+101
mov @B+87 A
addi @B+101	; ENTERO + ENTERO
mov A @B+102	; guardar el resultado en temporal
mov #0 103	; guarda 0 y empieza recursivo arrays de this.a
mov #0 @B+104		; guarda entero 0
mov 103 A 	; hace recursivo de arrays
muli #1
addi @B+104 
mov A 105 
mov #1 @B+106		; guarda entero 1
mov @B+105 A 	; hace recursivo de arrays
muli #2
addi @B+106 
mov A 107 
mov #0 @B+108		; guarda entero 0
mov @B+107 A 	; hace recursivo de arrays
muli #1
addi @B+108 
mov A 109 
mov #0 @B+110		; guarda entero 0
mov @B+109 A 	; hace recursivo de arrays
muli #1
addi @B+110 
mov A 111 
mov #0 @B+112		; guarda entero 0
mov @B+111 A 	; hace recursivo de arrays
muli #2
addi @B+112 
mov A 113 
mov #0 @B+114		; guarda entero 0
mov @B+113 A 	; hace recursivo de arrays
muli #1
addi @B+114 
mov A 115 
mov #0 @B+115		; guarda 0 y empieza recursivo arrays de this.a
mov @B+115 @B+116		; guarda id this.a
muli #1 
addi #0
mov @A @B+116
mov @B+102 A
addi @B+116	; ENTERO + ENTERO
mov A @B+117	; guardar el resultado en temporal
mov #0 118	; guarda 0 y empieza recursivo arrays de a
mov #0 @B+119		; guarda entero 0
mov 118 A 	; hace recursivo de arrays
muli #1
addi @B+119 
mov A 120 
mov #0 @B+121		; guarda entero 0
mov @B+120 A 	; hace recursivo de arrays
muli #2
addi @B+121 
mov A 122 
mov #0 @B+123		; guarda entero 0
mov @B+122 A 	; hace recursivo de arrays
muli #1
addi @B+123 
mov A 124 
mov #0 @B+125		; guarda entero 0
mov @B+124 A 	; hace recursivo de arrays
muli #1
addi @B+125 
mov A 126 
mov #1 @B+127		; guarda entero 1
mov @B+126 A 	; hace recursivo de arrays
muli #2
addi @B+127 
mov A 128 
mov #0 @B+129		; guarda entero 0
mov @B+128 A 	; hace recursivo de arrays
muli #1
addi @B+129 
mov A 130 
mov #0 @B+130		; guarda 0 y empieza recursivo arrays de a
mov @B+130 @B+131		; guarda id a
muli #1 
addi #0
mov @A @B+131
mov @B+117 A
addi @B+131	; ENTERO + ENTERO
mov A @B+132	; guardar el resultado en temporal
wri @B+132	; print valor entero de temporal
wrl
halt
