;Imprime temp = 0
mov #0 B
jmp L5

; metodo: 'factorial'
L4 mov @B+0 @B+2		; guarda id n
mov #1 @B+3		; guarda entero 1
mov @B+2 A
leqi @B+3	; Expr relop Esimple
mov A @B+4	; guardar el resultado en temporal
mov @B+4 A
jz L2
mov #1 @B+5		; guarda entero 1
; Secuencia de retorno
mov @B+5 @B-3
mov @B-2 A
jmp @A
jmp L3
L2 mov @B+0 @B+6		; guarda id n
mov @B+0 @B+7		; guarda id n
mov #1 @B+8		; guarda entero 1
mov @B+7 A
subi @B+8	; ENTERO - ENTERO
mov A @B+9	; guardar el resultado en temporal
mov @B+9 @B+13	; asigna un param
; Secuencia de llamada
mov B @B+11
mov B A
addi #10
mov A B
mvetq L1 @B-2
jmp 
L1 mov @B-1 B
mov @B+6 A
muli @B+9	; ENTERO * ENTERO
mov A @B+10
; Secuencia de retorno
mov @B+10 @B-3
mov @B-2 A
jmp @A
L3 ; DIR USED = 11
mov #0 @B-3
mov @B-2 A
jmp @A

L5  
;print
mov #6 @B+1		; guarda entero 6
mov @B+1 @B+5	; asigna un param
; Secuencia de llamada
mov B @B+3
mov B A
addi #4
mov A B
mvetq L6 @B-2
jmp L4
L6 mov @B-1 B
wri @B+1	; print valor entero de temporal
wrl
halt
