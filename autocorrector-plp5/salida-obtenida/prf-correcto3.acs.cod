; Array n empieza en = @B+0
; Array n empieza en = @B+0
;Guarda desde: 6
;Actual empieza: 9
;Hasta: 10
; Array n empieza en = @B+0
;Guarda desde: 0
;Actual empieza: 3
;Hasta: 4
mov #0 B
jmp L5

; metodo: 'factorial'
L1 mov @B+0 @B+2		; guarda id n
mov #1 @B+3		; guarda entero 1
mov @B+2 A
leqi @B+3	; Expr relop Esimple
mov A @B+4	; guardar el resultado en temporal
mov @B+4 A
jz L3
mov #1 @B+5		; guarda entero 1
; Secuencia de retorno
mov @B+5 @B-3
mov @B-2 A
jmp @A
jmp L4
L3 mov @B+0 @B+6		; guarda id n
mov @B+0 @B+11		; guarda id n
mov #1 @B+12		; guarda entero 1
mov @B+11 A
subi @B+12	; ENTERO - ENTERO
mov A @B+13	; guardar el resultado en temporal
mov @B+13 @B+10	; asigna un param Par
; Secuencia de llamada
mov B @B+9
mov B A
addi #10
mov A B
mvetq L2 @B-2
jmp L1
L2 mov @B-1 B
mov @B+6 A
muli @B+7	; ENTERO * ENTERO
mov A @B+14
; Secuencia de retorno
mov @B+14 @B-3
mov @B-2 A
jmp @A
L4 ; DIR USED = 15
mov #0 @B-3
mov @B-2 A
jmp @A

L5  
;print
mov #6 @B+5		; guarda entero 6
mov @B+5 @B+4	; asigna un param Par
; Secuencia de llamada
mov B @B+3
mov B A
addi #4
mov A B
mvetq L6 @B-2
jmp L1
L6 mov @B-1 B
wri @B+1	; print valor entero de temporal
wrl
halt
